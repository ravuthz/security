spring:
    application:
        name: 'Spring Security'
    profiles:
        active: development

    data:
        rest:
            base-path: /api
            max-page-size: 20
            page-param-name: page
            sort-param-name: sort
            limit-param-name: size


---
# development profile
spring:
    profiles: development
    datasource:
#        data: classpath:init_data.sql
        driver-class-name: org.postgresql.Driver
        password: postgres
        url: jdbc:postgresql://localhost:5432/postgres
        username: postgres
#    datasource:
#        driver-class-name: org.h2.Driver
#        password:
#        url: jdbc:h2:mem:testdb;DB_CLOSE_ON_EXIT=FALSE
#        username: sa
        testWhileIdle: true
        validationQuery: SELECT 1
#    jpa:
#        generate-ddl: true
#        hibernate:
#            ddl-auto: update
#            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
#        properties:
#            hibernate:
#                dialect: org.hibernate.dialect.PostgreSQL94Dialect
##                dialect: org.hibernate.dialect.H2Dialect
#            show-sql: true
    queries:
        roles-query: select u.email, r.role from users u inner join user_role ur on(u.user_id=ur.user_id) inner join roles r on(ur.role_id=r.role_id) where u.email=?
        users-query: select email, password, active from users u where email=?

    thymeleaf:
        cache: false
        charset: UTF-8

    #SECURITY (SecuriyProperties)
    user:
        name: user1
        password: user1

logging:
    file: logs/development.log
    pattern:
        console: "%clr(%d{HH:mm:ss}){magenta} %clr(%-5level - %logger{15} %msg%n)"
#        console: "%d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n"
#        console: "%d{yyyy-MM-dd HH:mm:ss} %-3level - %msg%n"
#        console: "%d %-5level %logger : %msg%n"
#        file: "%d %-5level [%thread] %logger : %msg%n"
        file: "%d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n"
    level:
        root: ERROR
        org:
            hibernate: INFO
            springframework:
                web: INFO
                security: INFO
            apache:
                commons:
                    dbcp2: INFO
        com:
            khmergroup:
                security:
                    controller: INFO
                    service: DEBUG

server:
    port: 8080

---
# production profile
spring:
    profiles: production
logging:
    file: logs/production.log
    pattern:
        file: "%d %-5level [%thread] %logger{0} : %msg%n"
    level:
        org.hibernate: WARN
        org.springframework.web: WARN
        com.khmergroup.security.controller: WARN